{"version":3,"sources":["components/GoodsList.jsx","api/goods.js","App.js","index.js"],"names":["GoodsList","goods","className","map","good","key","id","style","color","name","getAll","fetch","then","response","json","get5First","a","goodsList","sort","b","localeCompare","slice","getRed","filter","App","state","data","this","setState","type","onClick","handleLoadedData","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAGaA,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACE,wBAAIC,UAAU,+BACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBACEF,UAAU,kBACVG,IAAKD,EAAKE,GACVC,MAAO,CAAEC,MAAOJ,EAAKI,QAEpBJ,EAAKK,aCTT,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACmBN,IADnB,cACCO,EADD,yBAGEA,EAAUC,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAEP,KAAKW,cAAcD,EAAEV,SACpDY,MAAM,EAAG,IAJP,4C,sBAOA,SAAeC,IAAtB,+B,4CAAO,4BAAAN,EAAA,sEACmBN,IADnB,cACCO,EADD,yBAGEA,EAAUM,QAAO,SAAAnB,GAAI,MAAmB,QAAfA,EAAKI,UAHhC,4C,0BCsCQgB,E,4MA3CbC,MAAQ,CACNxB,MAAO,I,6FAGT,WAAuByB,GAAvB,eAAAV,EAAA,sEACsBU,IADtB,OACQzB,EADR,OAGE0B,KAAKC,SAAS,CAAE3B,UAHlB,gD,2EAMA,WAAU,IAAD,OACCA,EAAU0B,KAAKF,MAAfxB,MAER,OACE,yBAAKC,UAAU,8CACb,qDACA,4BACE2B,KAAK,SACL3B,UAAU,kBACV4B,QAAS,kBAAM,EAAKC,iBAAiBrB,KAHvC,kBAOA,4BACEmB,KAAK,SACL3B,UAAU,kBACV4B,QAAS,kBAAM,EAAKC,iBAAiBhB,KAHvC,sBAOA,4BACEc,KAAK,SACL3B,UAAU,iBACV4B,QAAS,kBAAM,EAAKC,iBAAiBT,KAHvC,kBAOA,kBAAC,EAAD,CAAWrB,MAAOA,S,GAtCR+B,IAAMC,WCLxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.08a9bbf0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <div>\n    <ul className=\"list-group list-group-flush\">\n      {goods.map(good => (\n        <li\n          className=\"list-group-item\"\n          key={good.id}\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport async function get5First() {\n  const goodsList = await getAll();\n\n  return goodsList.sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5);\n}\n\nexport async function getRed() {\n  const goodsList = await getAll();\n\n  return goodsList.filter(good => good.color === 'red');\n}\n","import React from 'react';\n\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nimport { getAll, get5First, getRed } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  async handleLoadedData(data) {\n    const goods = await data();\n\n    this.setState({ goods });\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"content shadow-sm p-3 mb-5 bg-body rounded\">\n        <h1>Dynamic list of Goods</h1>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => this.handleLoadedData(getAll)}\n        >\n          Load All goods\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-success\"\n          onClick={() => this.handleLoadedData(get5First)}\n        >\n          Load 5 first goods\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => this.handleLoadedData(getRed)}\n        >\n          Load red goods\n        </button>\n        <GoodsList goods={goods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}